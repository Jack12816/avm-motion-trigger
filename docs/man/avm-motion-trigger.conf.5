.\" Process this file with
.\" groff -man -Tascii avm-motion-triggerd.1
.if !d URL \{\
.	de URL
.	 nop .B \\$2
.	.
.\}

.TH avm-motion-trigger.conf 5 "SEPTEMBER 2015" avm-motion-trigger "User Manuals"

.SH NAME
avm-motion-trigger.conf \- the configuration file for the AVM Motion Trigger daemon

.SH FORMAT
The configuration file is managed by
.BR "libconfig".
All formatting rules from their standard match to ours.
    The configuration contains parameters of the form:

.I name = value;

Any line starting with
.IR "#" " or " "//" " are comments."
All parameters which are described to be
.IR "strings" " needs to wraped by double quotes."
.I (name = """string"";)"
    All parameters which are described to be
.IR "integers" " needs no such wrapping. Just specify the value."
.I (name = 0;)

.SH DESCRIPTION
The
.URL "avmctl.1.html" "avmctl (1)"
and the
.URL "avm-motion-triggerd.1.html" "avm-motion-triggerd (1)"
binaries can consume this configuration file.
The configuration contains multiple sections:

.SS "AVM FRITZ!Box credentials"

These parameters specify the credentials which should be used to login to a
FRITZ!Box and start a new session.

.IP "" 4
.B "hostname"
.IP "" 8
The hostname/ip[:port] of the fritzbox without protocol scheme or URI paths, by default
.IR "fritz.box".
This value is a
.IR "string".
.IP "" 0

.IP "" 4
.B "username"
.IP "" 8
The username of the fritzbox which is able to perform smart home management.
According to the documentation from AVM this setting can be empty, by default empty.
This value is a
.IR "string".
.IP "" 0

.IP "" 4
.B "password"
.IP "" 8
The plaintext password of the fritzbox, by default
.IR "0000" ". This value is a"
.IR "string".
.IP "" 0

.SS "Device configuration"

.IP "" 4
.B "ain"
.IP "" 8
The Actor Identification Number of the AVM Smart Switch to control.
The format of the AIN is
.IR "FF:FF:FF:FF:FF:FF" ". This value is a"
.IR "string".
This parameter will specify be the default actor for
.BR "avmctl".
.IP "" 0

.IP "" 4
.B "actor_command"
.IP "" 8
The specified command will be send to the actor in case a motion
was detected. Available commands are:
.RI "`" "on" "`, `" "off" "`, `" "toggle" "`."
Defaults to
.RI "`" "on" "`."
This parameter is
.I ignored by
.BR "avmctl".
This value is a
.IR "string".
.IP "" 0

.IP "" 4
.B "turn_device_off_after"
.IP "" 8
Turn off the device after n seconds (eg. 10 minutes).
Specifying
.IR "0" " will disable automatic turn off. Defaults to "
.IR "0".
This parameter is
.I ignored by
.BR "avmctl".
This value is an
.IR "integer".
.IP "" 0

.SS "Sensor thresholds"

.IP "" 4
.B "light_sensor_thold"
.IP "" 8
The daemon takes care of a detected PIR motion if the level of the ambient
light is below the specified threshold. 0 will disable the light sensor check.
With a 10-bit ADC (eg. MCP3008) the range is 0-1023.
This parameter is
.I ignored by
.BR "avmctl".
This value is an
.IR "integer".
.IP "" 0

.IP "" 4
.B "motion_sensor_locktime"
.IP "" 8
If you set the turn_device_off_after parameter to 0 you probably want
to build a toggle-by-motion setup. In this case it is advisable to specify
a time range which prevent jitter triggering. So no action is performed
for n seconds after a motion was detected. Defaults to
.IR "30" " seconds."
This parameter is
.I ignored by
.BR "avmctl".
This value is an
.IR "integer".
.IP "" 0

.IP "" 4
.B "too_bright_timeout"
.IP "" 8
With this parameter you are able to enforce a sleeping interval (in seconds) if
the current ambient light level is greater than the configured threshold. A
bright environment won't be dark in 10 milliseconds, so you could save power
and put the daemon to sleep for a while. No new motion will be detected while
this timeout. 0 will disable this timeout. Defaults to
.IR "30" " seconds."
This parameter is
.I ignored by
.BR "avmctl".
This value is an
.IR "integer".
.IP "" 0

.IP "" 4
.B "backup_action_timeout"
.IP "" 8
If an error occurs while performing an action on the configured actor, the
daemon always tries to rescue the situation with a so called backup request.
With this parameter you can control the time window between the first and the
backup request (in seconds). 0 will disable this timeout. Defaults to
.IR "1" " second."
This parameter is
.I ignored by
.BR "avmctl".
This value is an
.IR "integer".
.IP "" 0

.IP "" 4
.B "failed_backup_action_timeout"
.IP "" 8
If even the backup request fails then we can't do much more about it. With this
parameter you can put the daemon to sleep for a specified interval (in seconds).
0 will disable this timeout. Defaults to
.IR "30" " seconds."
This parameter is
.I ignored by
.BR "avmctl".
This value is an
.IR "integer".
.IP "" 0

.SS "Sensor ports"

.IP "" 4
.B "motion_sensor_gpio"
.IP "" 8
Specify a GPIO pin for the PIR motion sensor. The daemon assumes a state
change from LOW to HIGH represents a recognized motion. The GPIO pin mapping
can be found on bcm2835.h or on http://www.airspayce.com/mikem/bcm2835/.
This parameter is
.I ignored by
.BR "avmctl".
This value is an
.IR "integer".
.IP "" 0

.IP "" 4
.B "light_sensor_device"
.IP "" 8
The daemon assumes to read the light level from a MCP3008 which is connected
to the SPI bus. With this setting you can choose the Linux kernel SPI device
the daemon should use. Defaults to
.IR "/dev/spidev0.0".
This parameter is
.I ignored by
.BR "avmctl".
This value is a
.IR "string".
.IP "" 0

.IP "" 4
.B "light_sensor_channel"
.IP "" 8
The daemon assumes to read the light level from a MCP3008 which is connected
to the SPI bus. With this setting you can configure which channel of the chip
will be read out. This parameter is
.I ignored by
.BR "avmctl".
This value is an
.IR "integer".
.IP "" 0

.SH AUTHOR
Hermann Mayer <jack@jity.de>
